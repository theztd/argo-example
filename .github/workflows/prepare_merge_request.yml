name: Create Merge Request to Environment Branch

on:
  push:
    branches:
      - main
      - test

jobs:
  create-merge-request:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Determine changed environment
        id: env
        run: |
          CHANGED_ENVS=$(git diff --name-only HEAD^ | grep -oP 'env/\K[^/]+' | sort -u | tr '\n' ' ')
          if [ -z "$CHANGED_ENVS" ]; then
            echo "No environment change detected. Skipping."
            exit 0
          fi
          echo "Changed environments: $CHANGED_ENVS"
          echo "envs=$CHANGED_ENVS" >> $GITHUB_ENV
      
      - name: Set up Git credentials
        run: |
          git config --global user.email "github-actions@github.com"
          git config --global user.name "github-actions"
          git remote set-url origin https://x-access-token:${{ secrets.ACTIONS_PAT }}@github.com/${{ github.repository }}.git

      - name: Ensure target branches exist and reset them
        run: |
          for ENV in ${{ env.envs }}; do
            if ! git ls-remote --exit-code --heads origin $ENV; then
              echo "Creating branch $ENV"
              git branch $ENV main
              git push origin $ENV
            else
              echo "Resetting branch $ENV to match main"
              git push origin main:$ENV --force
            fi
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Move environment files to apps/ and remove env/
        run: |
          for ENV in ${{ env.envs }}; do
            mkdir -p apps/
            mv env/$ENV/* apps/
            rm -rf env/$ENV
            git add apps/
            git rm -rf env/$ENV
            git commit -m "Move $ENV files to apps/ and remove env/$ENV"
          done

      - name: Create Merge Requests
        if: env.envs != ''
        run: |
          for ENV in ${{ env.envs }}; do
            echo "Creating MR for environment: $ENV"
            gh pr create --base "$ENV" --head main --title "Deploy to $ENV" --body "Automated MR for deploying to $ENV" || echo "Merge request already exists or failed"
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
